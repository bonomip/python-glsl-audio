#version 330 core

out vec4 FragColor;

#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;

//shader toy remapping variables
#define iTime u_time

/*
    Perlin Noise function
*/

vec2 random2(vec2 st){
    st = vec2( dot(st,vec2(127.1,311.7)),
              dot(st,vec2(269.5,183.3)) );
    return -1.0 + 2.0*fract(sin(st)*43758.5453123);
}

// Value Noise by Inigo Quilez - iq/2013
// https://www.shadertoy.com/view/lsf3WH
float noise(vec2 st) {
    vec2 i = floor(st);
    vec2 f = fract(st);

    vec2 u = f*f*(3.0-2.0*f);

    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),
                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),
                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),
                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);
}



void main(void)
{    
    vec3 iResolution = vec3(u_resolution.x, u_resolution.y, 0.0);
    vec2 fragCoord = gl_FragCoord.xy;
    vec4 fragColor;
    
    /*
    *
    *
    *   Copy and paste shadertoy code down here
    *
    *                  ___
    *                  | |
    *                  | |
    *               ___| |___
    *               \       /
    *                \     /
    *                 \   /
    *                  \ /
    *                   '
    *
    */

    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;
    uv *= 3.0;

    vec3 col = vec3(0.0, 0.0, 0.0);
    float frq = 0.0; // ???? find freq of white pulses
    
    float n = noise(uv+iTime/1.)*.6;
    float d = length(uv)*2.4 + n;
    d = sin(d*5.0 - (sin(d-iTime))/8.*(sin(iTime)*250.));
    d -= 0.15;
    d = abs(d);
    d = smoothstep(.05, 1., d);
    d = .05 / d;

    col += d;

    fragColor = vec4(col, 1.0);

    /*  
    *
    *                   .
    *                  / \
    *                 /   \
    *                /     \
    *               /__   __\
    *                  | |
    *                  | |
    *                  |_|      
    *
    */

    FragColor = fragColor;
}